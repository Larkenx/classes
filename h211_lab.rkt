#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 110 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 153 214
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 148 104
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
28 30 33 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 127 168 190
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 131 88 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 188 189
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 215 236 135
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 126 136 177
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 224 157 80 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 102 101
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1824 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; Structures"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; A state is composed of:"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; [Struct of Player], [Listof Planets], [Listof Interface]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 7 #"planets"
0 0 24 3 1 #" "
0 0 14 3 13 #"notifications"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; A player is composed of:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Num Num Num Num Num"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 8 #"rotation"
0 0 24 3 1 #" "
0 0 14 3 12 #"acceleration"
0 0 24 3 1 #" "
0 0 14 3 4 #"fuel"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; A planet is composed of:"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Num Num Num Color"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"planet"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; An interface is composed of:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; (any/c) Num Num Image interface"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; We will use this to draw images dynamically based on events."
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; The 'id' field is a unique identifier for this notification, so th"
 #"at"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #"; multiples are not added!"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 12 #"notification"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; Background"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; -----------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; add-star: Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-star"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; add-stars: Num Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-stars"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-stars"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 8 #"add-star"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-stars"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Ship Functions/Constants"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #"  "
0 6           4 4 54823
(
 #"(#(struct:translate 32.0 0.0 #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(str"
 #"uct:overlay #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 0 2.0 0 0) #(struct:pulled-point 0 0 -2.0 2.0"
 #" 0 0) #(struct:pulled-point 0 0 -2.0 -0.0 0 0)) 255 #(struct:color 2"
 #"55 255 255 0)) #(struct:polygon (#(struct:pulled-point 0 0 -2.0 0 0 "
 #"0) #(struct:pulled-point 0 0 -2.0 2.0 0 0) #(struct:pulled-point 0 0"
 #" -4.0 2.0 0 0) #(struct:pulled-point 0 0 -4.0 -0.0 0 0)) 255 #(struc"
 #"t:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0"
 #" -4.0 0 0 0) #(struct:pulled-point 0 0 -4.0 2.0 0 0) #(struct:pulled"
 #"-point 0 0 -6.0 2.0 0 0) #(struct:pulled-point 0 0 -6.0 -0.0 0 0)) 2"
 #"55 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled"
 #"-point 0 0 -6.0 0 0 0) #(struct:pulled-point 0 0 -6.0 2.0 0 0) #(str"
 #"uct:pulled-point 0 0 -8.0 2.0 0 0) #(struct:pulled-point 0 0 -8.0 -0"
 #".0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 -8.0 0 0 0) #(struct:pulled-point 0 0 -8.0 2.0 "
 #"0 0) #(struct:pulled-point 0 0 -10.0 2.0 0 0) #(struct:pulled-point "
 #"0 0 -10.0 -0.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -10.0 0 0 0) #(struct:pulled-point "
 #"0 0 -10.0 2.0 0 0) #(struct:pulled-point 0 0 -12.0 2.0 0 0) #(struct"
 #":pulled-point 0 0 -12.0 -0.0 0 0)) 255 #(struct:color 255 255 255 0)"
 #")) #(struct:polygon (#(struct:pulled-point 0 0 -12.0 0 0 0) #(struct"
 #":pulled-point 0 0 -12.0 2.0 0 0) #(struct:pulled-point 0 0 -14.0 2.0"
 #" 0 0) #(struct:pulled-point 0 0 -14.0 -0.0 0 0)) 255 #(struct:color "
 #"255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 0"
 #" 0 0) #(struct:pulled-point 0 0 -14.0 2.0 0 0) #(struct:pulled-point"
 #" 0 0 -16.0 2.0 0 0) #(struct:pulled-point 0 0 -16.0 -0.0 0 0)) 255 #"
 #"(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 -16.0 0 0 0) #(struct:pulled-point 0 0 -16.0 2.0 0 0) #(struc"
 #"t:pulled-point 0 0 -18.0 2.0 0 0) #(struct:pulled-point 0 0 -18.0 -0"
 #".0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"18.0 0 0 0) #(struct:pulled-point 0 0 -18.0 2.0 0 0) #(struct:pulled"
 #"-point 0 0 -20.0 2.0 0 0) #(struct:pulled-point 0 0 -20.0 -0.0 0 0))"
 #" 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0 0 0"
 #" 0) #(struct:pulled-point 0 0 -20.0 2.0 0 0) #(struct:pulled-point 0"
 #" 0 -22.0 2.0 0 0) #(struct:pulled-point 0 0 -22.0 -0.0 0 0)) 255 \"l"
 #"ight gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -22.0 0 0 "
 #"0) #(struct:pulled-point 0 0 -22.0 2.0 0 0) #(struct:pulled-point 0 "
 #"0 -24.0 2.0 0 0) #(struct:pulled-point 0 0 -24.0 -0.0 0 0)) 255 \"li"
 #"ght gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -24.0 0 0 0"
 #") #(struct:pulled-point 0 0 -24.0 2.0 0 0) #(struct:pulled-point 0 0"
 #" -26.0 2.0 0 0) #(struct:pulled-point 0 0 -26.0 -0.0 0 0)) 255 \"lig"
 #"ht gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -26.0 0 0 0)"
 #" #(struct:pulled-point 0 0 -26.0 2.0 0 0) #(struct:pulled-point 0 0 "
 #"-28.0 2.0 0 0) #(struct:pulled-point 0 0 -28.0 -0.0 0 0)) 255 \"ligh"
 #"t gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -28.0 0 0 0) "
 #"#(struct:pulled-point 0 0 -28.0 2.0 0 0) #(struct:pulled-point 0 0 -"
 #"30.0 2.0 0 0) #(struct:pulled-point 0 0 -30.0 -0.0 0 0)) 255 \"light"
 #" gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -30.0 0 0 0) #"
 #"(struct:pulled-point 0 0 -30.0 2.0 0 0) #(struct:pulled-point 0 0 -3"
 #"2.0 2.0 0 0) #(struct:pulled-point 0 0 -32.0 -0.0 0 0)) 255 \"light "
 #"gray\")) #(struct:polygon (#(struct:pulled-point 0 0 0 2.0 0 0) #(st"
 #"ruct:pulled-point 0 0 0 4.0 0 0) #(struct:pulled-point 0 0 -2.0 4.0 "
 #"0 0) #(struct:pulled-point 0 0 -2.0 2.0 0 0)) 255 #(struct:color 255"
 #" 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -2.0 2.0 0"
 #" 0) #(struct:pulled-point 0 0 -2.0 4.0 0 0) #(struct:pulled-point 0 "
 #"0 -4.0 4.0 0 0) #(struct:pulled-point 0 0 -4.0 2.0 0 0)) 255 #(struc"
 #"t:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0"
 #" -4.0 2.0 0 0) #(struct:pulled-point 0 0 -4.0 4.0 0 0) #(struct:pull"
 #"ed-point 0 0 -6.0 4.0 0 0) #(struct:pulled-point 0 0 -6.0 2.0 0 0)) "
 #"255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 -6.0 2.0 0 0) #(struct:pulled-point 0 0 -6.0 4.0 0 0) #("
 #"struct:pulled-point 0 0 -8.0 4.0 0 0) #(struct:pulled-point 0 0 -8.0"
 #" 2.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -8.0 2.0 0 0) #(struct:pulled-point 0 0 -8.0 "
 #"4.0 0 0) #(struct:pulled-point 0 0 -10.0 4.0 0 0) #(struct:pulled-po"
 #"int 0 0 -10.0 2.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct"
 #":polygon (#(struct:pulled-point 0 0 -10.0 2.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -10.0 4.0 0 0) #(struct:pulled-point 0 0 -12.0 4.0 0 0) #(s"
 #"truct:pulled-point 0 0 -12.0 2.0 0 0)) 255 #(struct:color 255 255 25"
 #"5 0))) #(struct:polygon (#(struct:pulled-point 0 0 -12.0 2.0 0 0) #("
 #"struct:pulled-point 0 0 -12.0 4.0 0 0) #(struct:pulled-point 0 0 -14"
 #".0 4.0 0 0) #(struct:pulled-point 0 0 -14.0 2.0 0 0)) 255 #(struct:c"
 #"olor 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -1"
 #"4.0 2.0 0 0) #(struct:pulled-point 0 0 -14.0 4.0 0 0) #(struct:pulle"
 #"d-point 0 0 -16.0 4.0 0 0) #(struct:pulled-point 0 0 -16.0 2.0 0 0))"
 #" 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 -16.0 2.0 0 0) #(struct:pulled-point 0 0 -16.0 4.0 0 0)"
 #" #(struct:pulled-point 0 0 -18.0 4.0 0 0) #(struct:pulled-point 0 0 "
 #"-18.0 2.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 -18.0 2.0 0 0) #(struct:pulled-point 0 0"
 #" -18.0 4.0 0 0) #(struct:pulled-point 0 0 -20.0 4.0 0 0) #(struct:pu"
 #"lled-point 0 0 -20.0 2.0 0 0)) 255 #(struct:color 255 255 255 0))) #"
 #"(struct:polygon (#(struct:pulled-point 0 0 -20.0 2.0 0 0) #(struct:p"
 #"ulled-point 0 0 -20.0 4.0 0 0) #(struct:pulled-point 0 0 -22.0 4.0 0"
 #" 0) #(struct:pulled-point 0 0 -22.0 2.0 0 0)) 255 #(struct:color 255"
 #" 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -22.0 2.0 "
 #"0 0) #(struct:pulled-point 0 0 -22.0 4.0 0 0) #(struct:pulled-point "
 #"0 0 -24.0 4.0 0 0) #(struct:pulled-point 0 0 -24.0 2.0 0 0)) 255 #(s"
 #"truct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -24.0 2.0 0 0) #(struct:pulled-point 0 0 -24.0 4.0 0 0) #(struc"
 #"t:pulled-point 0 0 -26.0 4.0 0 0) #(struct:pulled-point 0 0 -26.0 2."
 #"0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -26.0 2.0 0 0) #(struct:pulled-point 0 0 -26.0 4.0 0 0) #(struc"
 #"t:pulled-point 0 0 -28.0 4.0 0 0) #(struct:pulled-point 0 0 -28.0 2."
 #"0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -28.0 2.0 0 0) #(struct:pulled-point 0 0 -28.0 4.0 0 0) #(struc"
 #"t:pulled-point 0 0 -30.0 4.0 0 0) #(struct:pulled-point 0 0 -30.0 2."
 #"0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -30.0 2.0 0 0) #(struct:pulled-point 0 0 -30.0 4.0 0 0) #(struc"
 #"t:pulled-point 0 0 -32.0 4.0 0 0) #(struct:pulled-point 0 0 -32.0 2."
 #"0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 4.0 0 0) #(struct:pulled-point 0 0 0 6.0 0 0) "
 #"#(struct:pulled-point 0 0 -2.0 6.0 0 0) #(struct:pulled-point 0 0 -2"
 #".0 4.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -2.0 4.0 0 0) #(struct:pulled-point 0 0 -2."
 #"0 6.0 0 0) #(struct:pulled-point 0 0 -4.0 6.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -4.0 4.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct"
 #":polygon (#(struct:pulled-point 0 0 -4.0 4.0 0 0) #(struct:pulled-po"
 #"int 0 0 -4.0 6.0 0 0) #(struct:pulled-point 0 0 -6.0 6.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -6.0 4.0 0 0)) 255 #(struct:color 255 255 255 0)"
 #")) #(struct:polygon (#(struct:pulled-point 0 0 -6.0 4.0 0 0) #(struc"
 #"t:pulled-point 0 0 -6.0 6.0 0 0) #(struct:pulled-point 0 0 -8.0 6.0 "
 #"0 0) #(struct:pulled-point 0 0 -8.0 4.0 0 0)) 255 #(struct:color 255"
 #" 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -8.0 4.0 0"
 #" 0) #(struct:pulled-point 0 0 -8.0 6.0 0 0) #(struct:pulled-point 0 "
 #"0 -10.0 6.0 0 0) #(struct:pulled-point 0 0 -10.0 4.0 0 0)) 255 #(str"
 #"uct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -10.0 4.0 0 0) #(struct:pulled-point 0 0 -10.0 6.0 0 0) #(struct:"
 #"pulled-point 0 0 -12.0 6.0 0 0) #(struct:pulled-point 0 0 -12.0 4.0 "
 #"0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct"
 #":pulled-point 0 0 -12.0 4.0 0 0) #(struct:pulled-point 0 0 -12.0 6.0"
 #" 0 0) #(struct:pulled-point 0 0 -14.0 6.0 0 0) #(struct:pulled-point"
 #" 0 0 -14.0 4.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -14.0 4.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -14.0 6.0 0 0) #(struct:pulled-point 0 0 -16.0 6.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -16.0 4.0 0 0)) 255 #(struct:color 255 255 255 0"
 #"))) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 4.0 0 0) #(str"
 #"uct:pulled-point 0 0 -16.0 6.0 0 0) #(struct:pulled-point 0 0 -18.0 "
 #"6.0 0 0) #(struct:pulled-point 0 0 -18.0 4.0 0 0)) 255 #(struct:colo"
 #"r 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -18.0"
 #" 4.0 0 0) #(struct:pulled-point 0 0 -18.0 6.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -20.0 6.0 0 0) #(struct:pulled-point 0 0 -20.0 4.0 0 0)) 25"
 #"5 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 -20.0 4.0 0 0) #(struct:pulled-point 0 0 -20.0 6.0 0 0) #("
 #"struct:pulled-point 0 0 -22.0 6.0 0 0) #(struct:pulled-point 0 0 -22"
 #".0 4.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -22.0 4.0 0 0) #(struct:pulled-point 0 0 -2"
 #"2.0 6.0 0 0) #(struct:pulled-point 0 0 -24.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -24.0 4.0 0 0)) 255 \"light gray\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -24.0 4.0 0 0) #(struct:pulled-point 0 0 -2"
 #"4.0 6.0 0 0) #(struct:pulled-point 0 0 -26.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -26.0 4.0 0 0)) 255 \"light gray\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -26.0 4.0 0 0) #(struct:pulled-point 0 0 -2"
 #"6.0 6.0 0 0) #(struct:pulled-point 0 0 -28.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -28.0 4.0 0 0)) 255 \"light gray\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -28.0 4.0 0 0) #(struct:pulled-point 0 0 -2"
 #"8.0 6.0 0 0) #(struct:pulled-point 0 0 -30.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -30.0 4.0 0 0)) 255 #(struct:color 255 255 255 0))) #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 -30.0 4.0 0 0) #(struct:pull"
 #"ed-point 0 0 -30.0 6.0 0 0) #(struct:pulled-point 0 0 -32.0 6.0 0 0)"
 #" #(struct:pulled-point 0 0 -32.0 4.0 0 0)) 255 #(struct:color 255 25"
 #"5 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 0 6.0 0 0) #("
 #"struct:pulled-point 0 0 0 8.0 0 0) #(struct:pulled-point 0 0 -2.0 8."
 #"0 0 0) #(struct:pulled-point 0 0 -2.0 6.0 0 0)) 255 #(struct:color 2"
 #"55 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -2.0 6.0"
 #" 0 0) #(struct:pulled-point 0 0 -2.0 8.0 0 0) #(struct:pulled-point "
 #"0 0 -4.0 8.0 0 0) #(struct:pulled-point 0 0 -4.0 6.0 0 0)) 255 #(str"
 #"uct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -4.0 6.0 0 0) #(struct:pulled-point 0 0 -4.0 8.0 0 0) #(struct:pu"
 #"lled-point 0 0 -6.0 8.0 0 0) #(struct:pulled-point 0 0 -6.0 6.0 0 0)"
 #") 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 -6.0 6.0 0 0) #(struct:pulled-point 0 0 -6.0 8.0 0 0) "
 #"#(struct:pulled-point 0 0 -8.0 8.0 0 0) #(struct:pulled-point 0 0 -8"
 #".0 6.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -8.0 6.0 0 0) #(struct:pulled-point 0 0 -8."
 #"0 8.0 0 0) #(struct:pulled-point 0 0 -10.0 8.0 0 0) #(struct:pulled-"
 #"point 0 0 -10.0 6.0 0 0)) 255 #(struct:color 255 255 255 0))) #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 -10.0 6.0 0 0) #(struct:pulled"
 #"-point 0 0 -10.0 8.0 0 0) #(struct:pulled-point 0 0 -12.0 8.0 0 0) #"
 #"(struct:pulled-point 0 0 -12.0 6.0 0 0)) 255 #(struct:color 255 255 "
 #"255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -12.0 6.0 0 0) "
 #"#(struct:pulled-point 0 0 -12.0 8.0 0 0) #(struct:pulled-point 0 0 -"
 #"14.0 8.0 0 0) #(struct:pulled-point 0 0 -14.0 6.0 0 0)) 255 \"red\")"
 #") #(struct:polygon (#(struct:pulled-point 0 0 -14.0 6.0 0 0) #(struc"
 #"t:pulled-point 0 0 -14.0 8.0 0 0) #(struct:pulled-point 0 0 -16.0 8."
 #"0 0 0) #(struct:pulled-point 0 0 -16.0 6.0 0 0)) 255 \"red\")) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 -16.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -16.0 8.0 0 0) #(struct:pulled-point 0 0 -18.0 8.0 0 0) "
 #"#(struct:pulled-point 0 0 -18.0 6.0 0 0)) 255 \"light gray\")) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 -18.0 6.0 0 0) #(struct:pulle"
 #"d-point 0 0 -18.0 8.0 0 0) #(struct:pulled-point 0 0 -20.0 8.0 0 0) "
 #"#(struct:pulled-point 0 0 -20.0 6.0 0 0)) 255 \"blue\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -20.0 6.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -20.0 8.0 0 0) #(struct:pulled-point 0 0 -22.0 8.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -22.0 6.0 0 0)) 255 \"light gray\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -22.0 6.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -22.0 8.0 0 0) #(struct:pulled-point 0 0 -24.0 8.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -24.0 6.0 0 0)) 255 \"light gray\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -24.0 6.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -24.0 8.0 0 0) #(struct:pulled-point 0 0 -26.0 8.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -26.0 6.0 0 0)) 255 \"light gray\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -26.0 6.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -26.0 8.0 0 0) #(struct:pulled-point 0 0 -28.0 8.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -28.0 6.0 0 0)) 255 #(struct:color 255 255 255 0"
 #"))) #(struct:polygon (#(struct:pulled-point 0 0 -28.0 6.0 0 0) #(str"
 #"uct:pulled-point 0 0 -28.0 8.0 0 0) #(struct:pulled-point 0 0 -30.0 "
 #"8.0 0 0) #(struct:pulled-point 0 0 -30.0 6.0 0 0)) 255 #(struct:colo"
 #"r 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -30.0"
 #" 6.0 0 0) #(struct:pulled-point 0 0 -30.0 8.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -32.0 8.0 0 0) #(struct:pulled-point 0 0 -32.0 6.0 0 0)) 25"
 #"5 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 8.0 0 0) #(struct:pulled-point 0 0 0 10.0 0 0) #(struct:"
 #"pulled-point 0 0 -2.0 10.0 0 0) #(struct:pulled-point 0 0 -2.0 8.0 0"
 #" 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 -2.0 8.0 0 0) #(struct:pulled-point 0 0 -2.0 10.0 0"
 #" 0) #(struct:pulled-point 0 0 -4.0 10.0 0 0) #(struct:pulled-point 0"
 #" 0 -4.0 8.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 -4.0 8.0 0 0) #(struct:pulled-point 0 "
 #"0 -4.0 10.0 0 0) #(struct:pulled-point 0 0 -6.0 10.0 0 0) #(struct:p"
 #"ulled-point 0 0 -6.0 8.0 0 0)) 255 #(struct:color 255 255 255 0))) #"
 #"(struct:polygon (#(struct:pulled-point 0 0 -6.0 8.0 0 0) #(struct:pu"
 #"lled-point 0 0 -6.0 10.0 0 0) #(struct:pulled-point 0 0 -8.0 10.0 0 "
 #"0) #(struct:pulled-point 0 0 -8.0 8.0 0 0)) 255 #(struct:color 255 2"
 #"55 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -8.0 8.0 0 0"
 #") #(struct:pulled-point 0 0 -8.0 10.0 0 0) #(struct:pulled-point 0 0"
 #" -10.0 10.0 0 0) #(struct:pulled-point 0 0 -10.0 8.0 0 0)) 255 #(str"
 #"uct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -10.0 8.0 0 0) #(struct:pulled-point 0 0 -10.0 10.0 0 0) #(struct"
 #":pulled-point 0 0 -12.0 10.0 0 0) #(struct:pulled-point 0 0 -12.0 8."
 #"0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 -12.0 8.0 0 0) #(struct:pulled-point 0 0 -12.0 1"
 #"0.0 0 0) #(struct:pulled-point 0 0 -14.0 10.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -14.0 8.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -14.0 8.0 0 0) #(struct:pulled-"
 #"point 0 0 -14.0 10.0 0 0) #(struct:pulled-point 0 0 -16.0 10.0 0 0) "
 #"#(struct:pulled-point 0 0 -16.0 8.0 0 0)) 255 #(struct:color 255 255"
 #" 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 8.0 0 0)"
 #" #(struct:pulled-point 0 0 -16.0 10.0 0 0) #(struct:pulled-point 0 0"
 #" -18.0 10.0 0 0) #(struct:pulled-point 0 0 -18.0 8.0 0 0)) 255 \"blu"
 #"e\")) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 8.0 0 0) #(s"
 #"truct:pulled-point 0 0 -18.0 10.0 0 0) #(struct:pulled-point 0 0 -20"
 #".0 10.0 0 0) #(struct:pulled-point 0 0 -20.0 8.0 0 0)) 255 \"light g"
 #"ray\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0 8.0 0 0) #"
 #"(struct:pulled-point 0 0 -20.0 10.0 0 0) #(struct:pulled-point 0 0 -"
 #"22.0 10.0 0 0) #(struct:pulled-point 0 0 -22.0 8.0 0 0)) 255 \"light"
 #" gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -22.0 8.0 0 0)"
 #" #(struct:pulled-point 0 0 -22.0 10.0 0 0) #(struct:pulled-point 0 0"
 #" -24.0 10.0 0 0) #(struct:pulled-point 0 0 -24.0 8.0 0 0)) 255 \"lig"
 #"ht gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -24.0 8.0 0 "
 #"0) #(struct:pulled-point 0 0 -24.0 10.0 0 0) #(struct:pulled-point 0"
 #" 0 -26.0 10.0 0 0) #(struct:pulled-point 0 0 -26.0 8.0 0 0)) 255 \"l"
 #"ight gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -26.0 8.0 "
 #"0 0) #(struct:pulled-point 0 0 -26.0 10.0 0 0) #(struct:pulled-point"
 #" 0 0 -28.0 10.0 0 0) #(struct:pull"
 #"ed-point 0 0 -28.0 8.0 0 0)) 255 \"red\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 -28.0 8.0 0 0) #(struct:pulled-point 0 0 -28.0 10"
 #".0 0 0) #(struct:pulled-point 0 0 -30.0 10.0 0 0) #(struct:pulled-po"
 #"int 0 0 -30.0 8.0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 -30.0 8.0 0 0) #(struct:pulled-point 0 0 -30.0 10.0 0 "
 #"0) #(struct:pulled-point 0 0 -32.0 10.0 0 0) #(struct:pulled-point 0"
 #" 0 -32.0 8.0 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 10.0 0 0) #(struct:pulled-point 0 0 0 12.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -2.0 12.0 0 0) #(struct:pulled-point 0 0 -2.0 10"
 #".0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 -2.0 10.0 0 0) #(struct:pulled-point 0 0 -2.0 1"
 #"2.0 0 0) #(struct:pulled-point 0 0 -4.0 12.0 0 0) #(struct:pulled-po"
 #"int 0 0 -4.0 10.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct"
 #":polygon (#(struct:pulled-point 0 0 -4.0 10.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -4.0 12.0 0 0) #(struct:pulled-point 0 0 -6.0 12.0 0 0) #(s"
 #"truct:pulled-point 0 0 -6.0 10.0 0 0)) 255 #(struct:color 255 255 25"
 #"5 0))) #(struct:polygon (#(struct:pulled-point 0 0 -6.0 10.0 0 0) #("
 #"struct:pulled-point 0 0 -6.0 12.0 0 0) #(struct:pulled-point 0 0 -8."
 #"0 12.0 0 0) #(struct:pulled-point 0 0 -8.0 10.0 0 0)) 255 #(struct:c"
 #"olor 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -8"
 #".0 10.0 0 0) #(struct:pulled-point 0 0 -8.0 12.0 0 0) #(struct:pulle"
 #"d-point 0 0 -10.0 12.0 0 0) #(struct:pulled-point 0 0 -10.0 10.0 0 0"
 #")) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 -10.0 10.0 0 0) #(struct:pulled-point 0 0 -10.0 12.0 "
 #"0 0) #(struct:pulled-point 0 0 -12.0 12.0 0 0) #(struct:pulled-point"
 #" 0 0 -12.0 10.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 -12.0 10.0 0 0) #(struct:pulled-po"
 #"int 0 0 -12.0 12.0 0 0) #(struct:pulled-point 0 0 -14.0 12.0 0 0) #("
 #"struct:pulled-point 0 0 -14.0 10.0 0 0)) 255 #(struct:color 255 255 "
 #"255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 10.0 0 0)"
 #" #(struct:pulled-point 0 0 -14.0 12.0 0 0) #(struct:pulled-point 0 0"
 #" -16.0 12.0 0 0) #(struct:pulled-point 0 0 -16.0 10.0 0 0)) 255 \"li"
 #"ght gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 10.0 "
 #"0 0) #(struct:pulled-point 0 0 -16.0 12.0 0 0) #(struct:pulled-point"
 #" 0 0 -18.0 12.0 0 0) #(struct:pulled-point 0 0 -18.0 10.0 0 0)) 255 "
 #"\"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 1"
 #"0.0 0 0) #(struct:pulled-point 0 0 -18.0 12.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -20.0 12.0 0 0) #(struct:pulled-point 0 0 -20.0 10.0 0 0)) "
 #"255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -20"
 #".0 10.0 0 0) #(struct:pulled-point 0 0 -20.0 12.0 0 0) #(struct:pull"
 #"ed-point 0 0 -22.0 12.0 0 0) #(struct:pulled-point 0 0 -22.0 10.0 0 "
 #"0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0"
 #" -22.0 10.0 0 0) #(struct:pulled-point 0 0 -22.0 12.0 0 0) #(struct:"
 #"pulled-point 0 0 -24.0 12.0 0 0) #(struct:pulled-point 0 0 -24.0 10."
 #"0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -24.0 10.0 0 0) #(struct:pulled-point 0 0 -24.0 12.0 0 0) #(str"
 #"uct:pulled-point 0 0 -26.0 12.0 0 0) #(struct:pulled-point 0 0 -26.0"
 #" 10.0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 -26.0 10.0 0 0) #(struct:pulled-point 0 0 -26.0 12.0 0 0) #(struct"
 #":pulled-point 0 0 -28.0 12.0 0 0) #(struct:pulled-point 0 0 -28.0 10"
 #".0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"28.0 10.0 0 0) #(struct:pulled-point 0 0 -28.0 12.0 0 0) #(struct:pu"
 #"lled-point 0 0 -30.0 12.0 0 0) #(struct:pulled-point 0 0 -30.0 10.0 "
 #"0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -30."
 #"0 10.0 0 0) #(struct:pulled-point 0 0 -30.0 12.0 0 0) #(struct:pulle"
 #"d-point 0 0 -32.0 12.0 0 0) #(struct:pulled-point 0 0 -32.0 10.0 0 0"
 #")) 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 0 12"
 #".0 0 0) #(struct:pulled-point 0 0 0 14.0 0 0) #(struct:pulled-point "
 #"0 0 -2.0 14.0 0 0) #(struct:pulled-point 0 0 -2.0 12.0 0 0)) 255 #(s"
 #"truct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 -2.0 12.0 0 0) #(struct:pulled-point 0 0 -2.0 14.0 0 0) #(struc"
 #"t:pulled-point 0 0 -4.0 14.0 0 0) #(struct:pulled-point 0 0 -4.0 12."
 #"0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 -4.0 12.0 0 0) #(struct:pulled-point 0 0 -4.0 14"
 #".0 0 0) #(struct:pulled-point 0 0 -6.0 14.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -6.0 12.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 -6.0 12.0 0 0) #(struct:pulled-po"
 #"int 0 0 -6.0 14.0 0 0) #(struct:pulled-point 0 0 -8.0 14.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -8.0 12.0 0 0)) 255 \"light gray\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 -8.0 12.0 0 0) #(struct:pulled-po"
 #"int 0 0 -8.0 14.0 0 0) #(struct:pulled-point 0 0 -10.0 14.0 0 0) #(s"
 #"truct:pulled-point 0 0 -10.0 12.0 0 0)) 255 \"light gray\")) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -10.0 12.0 0 0) #(struct:pulled"
 #"-point 0 0 -10.0 14.0 0 0) #(struct:pulled-point 0 0 -12.0 14.0 0 0)"
 #" #(struct:pulled-point 0 0 -12.0 12.0 0 0)) 255 \"light gray\")) #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 -12.0 12.0 0 0) #(struct:pu"
 #"lled-point 0 0 -12.0 14.0 0 0) #(struct:pulled-point 0 0 -14.0 14.0 "
 #"0 0) #(struct:pulled-point 0 0 -14.0 12.0 0 0)) 255 \"light gray\"))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 -14.0 12.0 0 0) #(struc"
 #"t:pulled-point 0 0 -14.0 14.0 0 0) #(struct:pulled-point 0 0 -16.0 1"
 #"4.0 0 0) #(struct:pulled-point 0 0 -16.0 12.0 0 0)) 255 \"light gray"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 12.0 0 0) #(s"
 #"truct:pulled-point 0 0 -16.0 14.0 0 0) #(struct:pulled-point 0 0 -18"
 #".0 14.0 0 0) #(struct:pulled-point 0 0 -18.0 12.0 0 0)) 255 \"light "
 #"gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 12.0 0 0)"
 #" #(struct:pulled-point 0 0 -18.0 14.0 0 0) #(struct:pulled-point 0 0"
 #" -20.0 14.0 0 0) #(struct:pulled-point 0 0 -20.0 12.0 0 0)) 255 \"re"
 #"d\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0 12.0 0 0) #("
 #"struct:pulled-point 0 0 -20.0 14.0 0 0) #(struct:pulled-point 0 0 -2"
 #"2.0 14.0 0 0) #(struct:pulled-point 0 0 -22.0 12.0 0 0)) 255 \"red\""
 #")) #(struct:polygon (#(struct:pulled-point 0 0 -22.0 12.0 0 0) #(str"
 #"uct:pulled-point 0 0 -22.0 14.0 0 0) #(struct:pulled-point 0 0 -24.0"
 #" 14.0 0 0) #(struct:pulled-point 0 0 -24.0 12.0 0 0)) 255 \"light gr"
 #"ay\")) #(struct:polygon (#(struct:pulled-point 0 0 -24.0 12.0 0 0) #"
 #"(struct:pulled-point 0 0 -24.0 14.0 0 0) #(struct:pulled-point 0 0 -"
 #"26.0 14.0 0 0) #(struct:pulled-point 0 0 -26.0 12.0 0 0)) 255 \"ligh"
 #"t gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -26.0 12.0 0 "
 #"0) #(struct:pulled-point 0 0 -26.0 14.0 0 0) #(struct:pulled-point 0"
 #" 0 -28.0 14.0 0 0) #(struct:pulled-point 0 0 -28.0 12.0 0 0)) 255 \""
 #"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -28.0 12."
 #"0 0 0) #(struct:pulled-point 0 0 -28.0 14.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -30.0 14.0 0 0) #(struct:pulled-point 0 0 -30.0 12.0 0 0)) 25"
 #"5 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 -30.0 12.0 0 0) #(struct:pulled-point 0 0 -30.0 14.0 0 0) "
 #"#(struct:pulled-point 0 0 -32.0 14.0 0 0) #(struct:pulled-point 0 0 "
 #"-32.0 12.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 14.0 0 0) #(struct:pulled-point 0 0 0"
 #" 16.0 0 0) #(struct:pulled-point 0 0 -2.0 16.0 0 0) #(struct:pulled-"
 #"point 0 0 -2.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -2.0 14.0 0 0) #(struct:pulled-point 0 0 -2.0"
 #" 16.0 0 0) #(struct:pulled-point 0 0 -4.0 16.0 0 0) #(struct:pulled-"
 #"point 0 0 -4.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -4.0 14.0 0 0) #(struct:pulled-point 0 0 -4.0"
 #" 16.0 0 0) #(struct:pulled-point 0 0 -6.0 16.0 0 0) #(struct:pulled-"
 #"point 0 0 -6.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -6.0 14.0 0 0) #(struct:pulled-point 0 0 -6.0"
 #" 16.0 0 0) #(struct:pulled-point 0 0 -8.0 16.0 0 0) #(struct:pulled-"
 #"point 0 0 -8.0 14.0 0 0)) 255 \"green\")) #(struct:polygon (#(struct"
 #":pulled-point 0 0 -8.0 14.0 0 0) #(struct:pulled-point 0 0 -8.0 16.0"
 #" 0 0) #(struct:pulled-point 0 0 -10.0 16.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -10.0 14.0 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 -10.0 14.0 0 0) #(struct:pulled-point 0 0 -10.0 16.0 "
 #"0 0) #(struct:pulled-point 0 0 -12.0 16.0 0 0) #(struct:pulled-point"
 #" 0 0 -12.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 -12.0 14.0 0 0) #(struct:pulled-point 0 0 -12.0 1"
 #"6.0 0 0) #(struct:pulled-point 0 0 -14.0 16.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -14.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -14.0 14.0 0 0) #(struct:pulled-point 0 0 -14"
 #".0 16.0 0 0) #(struct:pulled-point 0 0 -16.0 16.0 0 0) #(struct:pull"
 #"ed-point 0 0 -16.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -16.0 14.0 0 0) #(struct:pulled-point 0 0"
 #" -16.0 16.0 0 0) #(struct:pulled-point 0 0 -18.0 16.0 0 0) #(struct:"
 #"pulled-point 0 0 -18.0 14.0 0 0)) 255 \"red\")) #(struct:polygon (#("
 #"struct:pulled-point 0 0 -18.0 14.0 0 0) #(struct:pulled-point 0 0 -1"
 #"8.0 16.0 0 0) #(struct:pulled-point 0 0 -20.0 16.0 0 0) #(struct:pul"
 #"led-point 0 0 -20.0 14.0 0 0)) 255 \"red\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 -20.0 14.0 0 0) #(struct:pulled-point 0 0 -20.0"
 #" 16.0 0 0) #(struct:pulled-point 0 0 -22.0 16.0 0 0) #(struct:pulled"
 #"-point 0 0 -22.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -22.0 14.0 0 0) #(struct:pulled-point 0 0 -"
 #"22.0 16.0 0 0) #(struct:pulled-point 0 0 -24.0 16.0 0 0) #(struct:pu"
 #"lled-point 0 0 -24.0 14.0 0 0)) 255 \"light gray\")) #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 -24.0 14.0 0 0) #(struct:pulled-point 0"
 #" 0 -24.0 16.0 0 0) #(struct:pulled-point 0 0 -26.0 16.0 0 0) #(struc"
 #"t:pulled-point 0 0 -26.0 14.0 0 0)) 255 \"light gray\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -26.0 14.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -26.0 16.0 0 0) #(struct:pulled-point 0 0 -28.0 16.0 0 0) #(s"
 #"truct:pulled-point 0 0 -28.0 14.0 0 0)) 255 \"light gray\")) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -28.0 14.0 0 0) #(struct:pulled"
 #"-point 0 0 -28.0 16.0 0 0) #(struct:pulled-point 0 0 -30.0 16.0 0 0)"
 #" #(struct:pulled-point 0 0 -30.0 14.0 0 0)) 255 \"light gray\")) #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 -30.0 14.0 0 0) #(struct:pu"
 #"lled-point 0 0 -30.0 16.0 0 0) #(struct:pulled-point 0 0 -32.0 16.0 "
 #"0 0) #(struct:pulled-point 0 0 -32.0 14.0 0 0)) 255 \"light gray\"))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 16.0 0 0) #(struct:pu"
 #"lled-point 0 0 0 18.0 0 0) #(struct:pulled-point 0 0 -2.0 18.0 0 0) "
 #"#(struct:pulled-point 0 0 -2.0 16.0 0 0)) 255 #(struct:color 255 255"
 #" 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -2.0 16.0 0 0)"
 #" #(struct:pulled-point 0 0 -2.0 18.0 0 0) #(struct:pulled-point 0 0 "
 #"-4.0 18.0 0 0) #(struct:pulled-point 0 0 -4.0 16.0 0 0)) 255 #(struc"
 #"t:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0"
 #" -4.0 16.0 0 0) #(struct:pulled-point 0 0 -4.0 18.0 0 0) #(struct:pu"
 #"lled-point 0 0 -6.0 18.0 0 0) #(struct:pulled-point 0 0 -6.0 16.0 0 "
 #"0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 -6.0 16.0 0 0) #(struct:pulled-point 0 0 -6.0 18.0 0"
 #" 0) #(struct:pulled-point 0 0 -8.0 18.0 0 0) #(struct:pulled-point 0"
 #" 0 -8.0 16.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 -8.0 16.0 0 0) #(struct:pulled-point 0 0 -8.0 18.0 0"
 #" 0) #(struct:pulled-point 0 0 -10.0 18.0 0 0) #(struct:pulled-point "
 #"0 0 -10.0 16.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct"
 #":pulled-point 0 0 -10.0 16.0 0 0) #(struct:pulled-point 0 0 -10.0 18"
 #".0 0 0) #(struct:pulled-point 0 0 -12.0 18.0 0 0) #(struct:pulled-po"
 #"int 0 0 -12.0 16.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 -12.0 16.0 0 0) #(struct:pulled-point 0 0 -12."
 #"0 18.0 0 0) #(struct:pulled-point 0 0 -14.0 18.0 0 0) #(struct:pulle"
 #"d-point 0 0 -14.0 16.0 0 0)) 255 \"light gray\")) #(struct:polygon ("
 #"#(struct:pulled-point 0 0 -14.0 16.0 0 0) #(struct:pulled-point 0 0 "
 #"-14.0 18.0 0 0) #(struct:pulled-point 0 0 -16.0 18.0 0 0) #(struct:p"
 #"ulled-point 0 0 -16.0 16.0 0 0)) 255 \"light gray\")) #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 -16.0 16.0 0 0) #(struct:pulled-point "
 #"0 0 -16.0 18.0 0 0) #(struct:pulled-point 0 0 -18.0 18.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -18.0 16.0 0 0)) 255 \"light gray\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 -18.0 16.0 0 0) #(struct:pulled-po"
 #"int 0 0 -18.0 18.0 0 0) #(struct:pulled-point 0 0 -20.0 18.0 0 0) #("
 #"struct:pulled-point 0 0 -20.0 16.0 0 0)) 255 \"red\")) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 -20.0 16.0 0 0) #(struct:pulled-point"
 #" 0 0 -20.0 18.0 0 0) #(struct:pulled-point 0 0 -22.0 18.0 0 0) #(str"
 #"uct:pulled-point 0 0 -22.0 16.0 0 0)) 255 \"red\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 -22.0 16.0 0 0) #(struct:pulled-point 0 "
 #"0 -22.0 18.0 0 0) #(struct:pulled-point 0 0 -24.0 18.0 0 0) #(struct"
 #":pulled-point 0 0 -24.0 16.0 0 0)) 255 \"light gray\")) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 -24.0 16.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -24.0 18.0 0 0) #(struct:pulled-point 0 0 -26.0 18.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -26.0 16.0 0 0)) 255 \"light gray\")) #(struct"
 #":polygon (#(struct:pulled-point 0 0 -26.0 16.0 0 0) #(struct:pulled-"
 #"point 0 0 -26.0 18.0 0 0) #(struct:pulled-point 0 0 -28.0 18.0 0 0) "
 #"#(struct:pulled-point 0 0 -28.0 16.0 0 0)) 255 \"light gray\")) #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 -28.0 16.0 0 0) #(struct:pul"
 #"led-point 0 0 -28.0 18.0 0 0) #(struct:pulled-point 0 0 -30.0 18.0 0"
 #" 0) #(struct:pulled-point 0 0 -30.0 16.0 0 0)) 255 #(struct:color 25"
 #"5 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -30.0 16."
 #"0 0 0) #(struct:pulled-point 0 0 -30.0 18.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -32.0 18.0 0 0) #(struct:pulled-point 0 0 -32.0 16.0 0 0)) 25"
 #"5 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 18.0 0 0) #(struct:pulled-point 0 0 0 20.0 0 0) #(struct"
 #":pulled-point 0 0 -2.0 20.0 0 0) #(struct:pulled-point 0 0 -2.0 18.0"
 #" 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 -2.0 18.0 0 0) #(struct:pulled-point 0 0 -2.0 20."
 #"0 0 0) #(struct:pulled-point 0 0 -4.0 20.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -4.0 18.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 -4.0 18.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -4.0 20.0 0 0) #(struct:pulled-point 0 0 -6.0 20.0 0 0) #(str"
 #"uct:pulled-point 0 0 -6.0 18.0 0 0)) 255 #(struct:color 255 255 255 "
 #"0))) #(struct:polygon (#(struct:pulled-point 0 0 -6.0 18.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -6.0 20.0 0 0) #(struct:pulled-point 0 0 -8.0 "
 #"20.0 0 0) #(struct:pulled-point 0 0 -8.0 18.0 0 0)) 255 #(struct:col"
 #"or 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -8.0"
 #" 18.0 0 0) #(struct:pulled-point 0 0 -8.0 20.0 0 0) #(struct:pulled-"
 #"point 0 0 -10.0 20.0 0 0) #(struct:pulled-point 0 0 -10.0 18.0 0 0))"
 #" 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 -10.0 18.0 0 0) #(struct:pulled-point 0 0 -10.0 20.0 0 "
 #"0) #(struct:pulled-point 0 0 -12.0 20.0 0 0) #(struct:pulled-point 0"
 #" 0 -12.0 18.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 -12.0 18.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -12.0 20.0 0 0) #(struct:pulled-point 0 0 -14.0 20.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -14.0 18.0 0 0)) 255 #(struct:color 255 255 25"
 #"5 0))) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 18.0 0 0) #"
 #"(struct:pulled-point 0 0 -14.0 20.0 0 0) #(struct:pulled-point 0 0 -"
 #"16.0 20.0 0 0) #(struct:pulled-point 0 0 -16.0 18.0 0 0)) 255 \"ligh"
 #"t gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 18.0 0 "
 #"0) #(struct:pulled-point 0 0 -16.0 20.0 0 0) #(struct:pulled-point 0"
 #" 0 -18.0 20.0 0 0) #(struct:pulled-point 0 0 -18.0 18.0 0 0)) 255 \""
 #"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 18."
 #"0 0 0) #(struct:pulled-point 0 0 -18.0 20.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -20.0 20.0 0 0) #(struct:pulled-point 0 0 -20.0 18.0 0 0)) 25"
 #"5 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0"
 #" 18.0 0 0) #(struct:pulled-point 0 0 -20.0 20.0 0 0) #(struct:pulled"
 #"-point 0 0 -22.0 20.0 0 0) #(struct:pulled-point 0 0 -22.0 18.0 0 0)"
 #") 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"22.0 18.0 0 0) #(struct:pulled-point 0 0 -22.0 20.0 0 0) #(struct:pu"
 #"lled-point 0 0 -24.0 20.0 0 0) #(struct:pulled-point 0 0 -24.0 18.0 "
 #"0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -24.0 18.0 0 0) #(struct:pulled-point 0 0 -24.0 20.0 0 0) #(struc"
 #"t:pulled-point 0 0 -26.0 20.0 0 0) #(struct:pulled-point 0 0 -26.0 1"
 #"8.0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"-26.0 18.0 0 0) #(struct:pulled-point 0 0 -26.0 20.0 0 0) #(struct:p"
 #"ulled-point 0 0 -28.0 20.0 0 0) #(struct:pulled-point 0 0 -28.0 18.0"
 #" 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -28"
 #".0 18.0 0 0) #(struct:pulled-point 0 0 -28.0 20.0 0 0) #(struct:pull"
 #"ed-point 0 0 -30.0 20.0 0 0) #(struct:pulled-point 0 0 -30.0 18.0 0 "
 #"0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -30.0 "
 #"18.0 0 0) #(struct:pulled-point 0 0 -30.0 20.0 0 0) #(struct:pulled-"
 #"point 0 0 -32.0 20.0 0 0) #(struct:pulled-point 0 0 -32.0 18.0 0 0))"
 #" 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 0 20.0"
 #" 0 0) #(struct:pulled-point 0 0 0 22.0 0 0) #(struct:pulled-point 0 "
 #"0 -2.0 22.0 0 0) #(struct:pulled-point 0 0 -2.0 20.0 0 0)) 255 #(str"
 #"uct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -2.0 20.0 0 0) #(struct:pulled-point 0 0 -2.0 22.0 0 0) #(struct:"
 #"pulled-point 0 0 -4.0 22.0 0 0) #(struct:pulled-point 0 0 -4.0 20.0 "
 #"0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct"
 #":pulled-point 0 0 -4.0 20.0 0 0) #(struct:pulled-point 0 0 -4.0 22.0"
 #" 0 0) #(struct:pulled-point 0 0 -6.0 22.0 0 0) #(struct:pulled-point"
 #" 0 0 -6.0 20.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -6.0 20.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -6.0 22.0 0 0) #(struct:pulled-point 0 0 -8.0 22.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -8.0 20.0 0 0)) 255 #(struct:color 255 255 255 0"
 #"))) #(struct:polygon (#(struct:pulled-point 0 0 -8.0 20.0 0 0) #(str"
 #"uct:pulled-point 0 0 -8.0 22.0 0 0) #(struct:pulled-point 0 0 -10.0 "
 #"22.0 0 0) #(struct:pulled-point 0 0 -10.0 20.0 0 0)) 255 #(struct:co"
 #"lor 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -10"
 #".0 20.0 0 0) #(struct:pulled-point 0 0 -10.0 22.0 0 0) #(struct:pull"
 #"ed-point 0 0 -12.0 22.0 0 0) #(struct:pulled-point 0 0 -12.0 20.0 0 "
 #"0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 -12.0 20.0 0 0) #(struct:pulled-point 0 0 -12.0 22.0"
 #" 0 0) #(struct:pulled-point 0 0 -14.0 22.0 0 0) #(struct:pulled-poin"
 #"t 0 0 -14.0 20.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 -14.0 20.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -14.0 22.0 0 0) #(struct:pulled-point 0 0 -16.0 22.0 0 0) #"
 #"(struct:pulled-point 0 0 -16.0 20.0 0 0)) 255 #(struct:color 255 255"
 #" 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -16.0 20.0 0 0"
 #") #(struct:pulled-point 0 0 -16.0 22.0 0 0) #(struct:pulled-point 0 "
 #"0 -18.0 22.0 0 0) #(struct:pulled-point 0 0 -18.0 20.0 0 0)) 255 \"b"
 #"lue\")) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 20.0 0 0) "
 #"#(struct:pulled-point 0 0 -18.0 22.0 0 0) #(struct:pulled-point 0 0 "
 #"-20.0 22.0 0 0) #(struct:pulled-point 0 0 -20.0 20.0 0 0)) 255 \"lig"
 #"ht gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0 20.0 0"
 #" 0) #(struct:pulled-point 0 0 -20.0 22.0 0 0) #(struct:pulled-point "
 #"0 0 -22.0 22.0 0 0) #(struct:pulle"
 #"d-point 0 0 -22.0 20.0 0 0)) 255 \"light gray\")) #(struct:polygon ("
 #"#(struct:pulled-point 0 0 -22.0 20.0 0 0) #(struct:pulled-point 0 0 "
 #"-22.0 22.0 0 0) #(struct:pulled-point 0 0 -24.0 22.0 0 0) #(struct:p"
 #"ulled-point 0 0 -24.0 20.0 0 0)) 255 \"light gray\")) #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 -24.0 20.0 0 0) #(struct:pulled-point "
 #"0 0 -24.0 22.0 0 0) #(struct:pulled-point 0 0 -26.0 22.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -26.0 20.0 0 0)) 255 \"light gray\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 -26.0 20.0 0 0) #(struct:pulled-po"
 #"int 0 0 -26.0 22.0 0 0) #(struct:pulled-point 0 0 -28.0 22.0 0 0) #("
 #"struct:pulled-point 0 0 -28.0 20.0 0 0)) 255 \"red\")) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 -28.0 20.0 0 0) #(struct:pulled-point"
 #" 0 0 -28.0 22.0 0 0) #(struct:pulled-point 0 0 -30.0 22.0 0 0) #(str"
 #"uct:pulled-point 0 0 -30.0 20.0 0 0)) 255 \"red\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 -30.0 20.0 0 0) #(struct:pulled-point 0 "
 #"0 -30.0 22.0 0 0) #(struct:pulled-point 0 0 -32.0 22.0 0 0) #(struct"
 #":pulled-point 0 0 -32.0 20.0 0 0)) 255 \"orange\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 22.0 0 0) #(struct:pulled-point 0 0 0 "
 #"24.0 0 0) #(struct:pulled-point 0 0 -2.0 24.0 0 0) #(struct:pulled-p"
 #"oint 0 0 -2.0 22.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -2.0 22.0 0 0) #(struct:pulled-"
 #"point 0 0 -2.0 24.0 0 0) #(struct:pulled-point 0 0 -4.0 24.0 0 0) #("
 #"struct:pulled-point 0 0 -4.0 22.0 0 0)) 255 #(struct:color 255 255 2"
 #"55 0))) #(struct:polygon (#(struct:pulled-point 0 0 -4.0 22.0 0 0) #"
 #"(struct:pulled-point 0 0 -4.0 24.0 0 0) #(struct:pulled-point 0 0 -6"
 #".0 24.0 0 0) #(struct:pulled-point 0 0 -6.0 22.0 0 0)) 255 #(struct:"
 #"color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"6.0 22.0 0 0) #(struct:pulled-point 0 0 -6.0 24.0 0 0) #(struct:pull"
 #"ed-point 0 0 -8.0 24.0 0 0) #(struct:pulled-point 0 0 -8.0 22.0 0 0)"
 #") 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 -8.0 22.0 0 0) #(struct:pulled-point 0 0 -8.0 24.0 0 0"
 #") #(struct:pulled-point 0 0 -10.0 24.0 0 0) #(struct:pulled-point 0 "
 #"0 -10.0 22.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 -10.0 22.0 0 0) #(struct:pulled-point"
 #" 0 0 -10.0 24.0 0 0) #(struct:pulled-point 0 0 -12.0 24.0 0 0) #(str"
 #"uct:pulled-point 0 0 -12.0 22.0 0 0)) 255 #(struct:color 255 255 255"
 #" 0))) #(struct:polygon (#(struct:pulled-point 0 0 -12.0 22.0 0 0) #("
 #"struct:pulled-point 0 0 -12.0 24.0 0 0) #(struct:pulled-point 0 0 -1"
 #"4.0 24.0 0 0) #(struct:pulled-point 0 0 -14.0 22.0 0 0)) 255 \"red\""
 #")) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 22.0 0 0) #(str"
 #"uct:pulled-point 0 0 -14.0 24.0 0 0) #(struct:pulled-point 0 0 -16.0"
 #" 24.0 0 0) #(struct:pulled-point 0 0 -16.0 22.0 0 0)) 255 \"red\")) "
 #"#(struct:polygon (#(struct:pulled-point 0 0 -16.0 22.0 0 0) #(struct"
 #":pulled-point 0 0 -16.0 24.0 0 0) #(struct:pulled-point 0 0 -18.0 24"
 #".0 0 0) #(struct:pulled-point 0 0"
 #" -18.0 22.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 -18.0 22.0 0 0) #(struct:pulled-point 0 0 -18.0 24.0 "
 #"0 0) #(struct:pulled-point 0 0 -20.0 24.0 0 0) #(struct:pulled-point"
 #" 0 0 -20.0 22.0 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 -20.0 22.0 0 0) #(struct:pulled-point 0 0 -20.0 24.0 0 "
 #"0) #(struct:pulled-point 0 0 -22.0 24.0 0 0) #(struct:pulled-point 0"
 #" 0 -22.0 22.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 -22.0 22.0 0 0) #(struct:pulled-point 0 0 -22.0 24."
 #"0 0 0) #(struct:pulled-point 0 0 -24.0 24.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -24.0 22.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 -24.0 22.0 0 0) #(struct:pulled-point 0 0 -24.0"
 #" 24.0 0 0) #(struct:pulled-point 0 0 -26.0 24.0 0 0) #(struct:pulled"
 #"-point 0 0 -26.0 22.0 0 0)) 255 \"light gray\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -26.0 22.0 0 0) #(struct:pulled-point 0 0 -"
 #"26.0 24.0 0 0) #(struct:pulled-point 0 0 -28.0 24.0 0 0) #(struct:pu"
 #"lled-point 0 0 -28.0 22.0 0 0)) 255 #(struct:color 255 255 255 0))) "
 #"#(struct:polygon (#(struct:pulled-point 0 0 -28.0 22.0 0 0) #(struct"
 #":pulled-point 0 0 -28.0 24.0 0 0) #(struct:pulled-point 0 0 -30.0 24"
 #".0 0 0) #(struct:pulled-point 0 0 -30.0 22.0 0 0)) 255 #(struct:colo"
 #"r 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -30.0"
 #" 22.0 0 0) #(struct:pulled-point 0 0 -30.0 24.0 0 0) #(struct:pulled"
 #"-point 0 0 -32.0 24.0 0 0) #(struct:pulled-point 0 0 -32.0 22.0 0 0)"
 #") 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 24.0 0 0) #(struct:pulled-point 0 0 0 26.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -2.0 26.0 0 0) #(struct:pulled-point 0 0 -2.0 "
 #"24.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 -2.0 24.0 0 0) #(struct:pulled-point 0 0 -2.0"
 #" 26.0 0 0) #(struct:pulled-point 0 0 -4.0 26.0 0 0) #(struct:pulled-"
 #"point 0 0 -4.0 24.0 0 0)) 255 #(struct:color 255 255 255 0))) #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 -4.0 24.0 0 0) #(struct:pulled"
 #"-point 0 0 -4.0 26.0 0 0) #(struct:pulled-point 0 0 -6.0 26.0 0 0) #"
 #"(struct:pulled-point 0 0 -6.0 24.0 0 0)) 255 #(struct:color 255 255 "
 #"255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -6.0 24.0 0 0) "
 #"#(struct:pulled-point 0 0 -6.0 26.0 0 0) #(struct:pulled-point 0 0 -"
 #"8.0 26.0 0 0) #(struct:pulled-point 0 0 -8.0 24.0 0 0)) 255 #(struct"
 #":color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"-8.0 24.0 0 0) #(struct:pulled-point 0 0 -8.0 26.0 0 0) #(struct:pul"
 #"led-point 0 0 -10.0 26.0 0 0) #(struct:pulled-point 0 0 -10.0 24.0 0"
 #" 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 -10.0 24.0 0 0) #(struct:pulled-point 0 0 -10.0 26."
 #"0 0 0) #(struct:pulled-point 0 0 -12.0 26.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -12.0 24.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct"
 #":polygon (#(struct:pulled-point 0 0 -12.0 24.0 0 0) #(struct:pulled-"
 #"point 0 0 -12.0 26.0 0 0) #(struct:pulled-point 0 0 -14.0 26.0 0 0) "
 #"#(struct:pulled-point 0 0 -14.0 24.0 0 0)) 255 #(struct:color 255 25"
 #"5 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 24.0 0 "
 #"0) #(struct:pulled-point 0 0 -14.0 26.0 0 0) #(struct:pulled-point 0"
 #" 0 -16.0 26.0 0 0) #(struct:pulled-point 0 0 -16.0 24.0 0 0)) 255 #("
 #"struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 -16.0 24.0 0 0) #(struct:pulled-point 0 0 -16.0 26.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -18.0 26.0 0 0) #(struct:pulled-point 0 0 -18."
 #"0 24.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 -18.0 24.0 0 0) #(struct:pulled-point 0 0 -"
 #"18.0 26.0 0 0) #(struct:pulled-point 0 0 -20.0 26.0 0 0) #(struct:pu"
 #"lled-point 0 0 -20.0 24.0 0 0)) 255 #(struct:color 255 255 255 0))) "
 #"#(struct:polygon (#(struct:pulled-point 0 0 -20.0 24.0 0 0) #(struct"
 #":pulled-point 0 0 -20.0 26.0 0 0) #(struct:pulled-point 0 0 -22.0 26"
 #".0 0 0) #(struct:pulled-point 0 0 -22.0 24.0 0 0)) 255 #(struct:colo"
 #"r 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -22.0"
 #" 24.0 0 0) #(struct:pulled-point 0 0 -22.0 26.0 0 0) #(struct:pulled"
 #"-point 0 0 -24.0 26.0 0 0) #(struct:pulled-point 0 0 -24.0 24.0 0 0)"
 #") 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"24.0 24.0 0 0) #(struct:pulled-point 0 0 -24.0 26.0 0 0) #(struct:pu"
 #"lled-point 0 0 -26.0 26.0 0 0) #(struct:pulled-point 0 0 -26.0 24.0 "
 #"0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -26.0 24.0 0 0) #(struct:pulled-point 0 0 -26.0 26.0 0 0) #(struc"
 #"t:pulled-point 0 0 -28.0 26.0 0 0) #(struct:pulled-point 0 0 -28.0 2"
 #"4.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 -28.0 24.0 0 0) #(struct:pulled-point 0 0 -28.0 26.0 0 0) #(s"
 #"truct:pulled-point 0 0 -30.0 26.0 0 0) #(struct:pulled-point 0 0 -30"
 #".0 24.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon ("
 #"#(struct:pulled-point 0 0 -30.0 24.0 0 0) #(struct:pulled-point 0 0 "
 #"-30.0 26.0 0 0) #(struct:pulled-point 0 0 -32.0 26.0 0 0) #(struct:p"
 #"ulled-point 0 0 -32.0 24.0 0 0)) 255 #(struct:color 255 255 255 0)))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 26.0 0 0) #(struct:pu"
 #"lled-point 0 0 0 28.0 0 0) #(struct:pulled-point 0 0 -2.0 28.0 0 0) "
 #"#(struct:pulled-point 0 0 -2.0 26.0 0 0)) 255 #(struct:color 255 255"
 #" 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -2.0 26.0 0 0)"
 #" #(struct:pulled-point 0 0 -2.0 28.0 0 0) #(struct:pulled-point 0 0 "
 #"-4.0 28.0 0 0) #(struct:pulled-point 0 0 -4.0 26.0 0 0)) 255 #(struc"
 #"t:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0"
 #" -4.0 26.0 0 0) #(struct:pulled-point 0 0 -4.0 28.0 0 0) #(struct:pu"
 #"lled-point 0 0 -6.0 28.0 0 0) #(struct:pulled-point 0 0 -6.0 26.0 0 "
 #"0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 -6.0 26.0 0 0) #(struct:pulled-point 0 0 -6.0 28.0 0"
 #" 0) #(struct:pulled-point 0 0 -8.0 28.0 0 0) #(struct:pulled-point 0"
 #" 0 -8.0 26.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 -8.0 26.0 0 0) #(struct:pulled-point "
 #"0 0 -8.0 28.0 0 0) #(struct:pulled-point 0 0 -10.0 28.0 0 0) #(struc"
 #"t:pulled-point 0 0 -10.0 26.0 0 0)) 255 #(struct:color 255 255 255 0"
 #"))) #(struct:polygon (#(struct:pulled-point 0 0 -10.0 26.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -10.0 28.0 0 0) #(struct:pulled-point 0 0 -12."
 #"0 28.0 0 0) #(struct:pulled-point 0 0 -12.0 26.0 0 0)) 255 #(struct:"
 #"color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -"
 #"12.0 26.0 0 0) #(struct:pulled-point 0 0 -12.0 28.0 0 0) #(struct:pu"
 #"lled-point 0 0 -14.0 28.0 0 0) #(struct:pulled-point 0 0 -14.0 26.0 "
 #"0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct"
 #":pulled-point 0 0 -14.0 26.0 0 0) #(struct:pulled-point 0 0 -14.0 28"
 #".0 0 0) #(struct:pulled-point 0 0 -16.0 28.0 0 0) #(struct:pulled-po"
 #"int 0 0 -16.0 26.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -16.0 26.0 0 0) #(struct:pulled"
 #"-point 0 0 -16.0 28.0 0 0) #(struct:pulled-point 0 0 -18.0 28.0 0 0)"
 #" #(struct:pulled-point 0 0 -18.0 26.0 0 0)) 255 #(struct:color 255 2"
 #"55 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -18.0 26.0 0"
 #" 0) #(struct:pulled-point 0 0 -18.0 28.0 0 0) #(struct:pulled-point "
 #"0 0 -20.0 28.0 0 0) #(struct:pulled-point 0 0 -20.0 26.0 0 0)) 255 #"
 #"(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 -20.0 26.0 0 0) #(struct:pulled-point 0 0 -20.0 28.0 0 0) #(s"
 #"truct:pulled-point 0 0 -22.0 28.0 0 0) #(struct:pulled-point 0 0 -22"
 #".0 26.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon ("
 #"#(struct:pulled-point 0 0 -22.0 26.0 0 0) #(struct:pulled-point 0 0 "
 #"-22.0 28.0 0 0) #(struct:pulled-point 0 0 -24.0 28.0 0 0) #(struct:p"
 #"ulled-point 0 0 -24.0 26.0 0 0)) 255 #(struct:color 255 255 255 0)))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 -24.0 26.0 0 0) #(struc"
 #"t:pulled-point 0 0 -24.0 28.0 0 0) #(struct:pulled-point 0 0 -26.0 2"
 #"8.0 0 0) #(struct:pulled-point 0 0 -26.0 26.0 0 0)) 255 \"light gray"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 -26.0 26.0 0 0) #(s"
 #"truct:pulled-point 0 0 -26.0 28.0 0 0) #(struct:pulled-point 0 0 -28"
 #".0 28.0 0 0) #(struct:pulled-point 0 0 -28.0 26.0 0 0)) 255 \"light "
 #"gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -28.0 26.0 0 0)"
 #" #(struct:pulled-point 0 0 -28.0 28.0 0 0) #(struct:pulled-point 0 0"
 #" -30.0 28.0 0 0) #(struct:pulled-point 0 0 -30.0 26.0 0 0)) 255 \"li"
 #"ght gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -30.0 26.0 "
 #"0 0) #(struct:pulled-point 0 0 -30.0 28.0 0 0) #(struct:pulled-point"
 #" 0 0 -32.0 28.0 0 0) #(struct:pulled-point 0 0 -32.0 26.0 0 0)) 255 "
 #"#(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 28.0 0 0) #(struct:pulled-point 0 0 0 30.0 0 0) #(struct:p"
 #"ulled-point 0 0 -2.0 30.0 0 0) #(struct:pulled-point 0 0 -2.0 28.0 0"
 #" 0)) 255 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 -2.0 28.0 0 0) #(struct:pulled-point 0 0 -2.0 30.0 "
 #"0 0) #(struct:pulled-point 0 0 -4.0 30.0 0 0) #(struct:pulled-point "
 #"0 0 -4.0 28.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 -4.0 28.0 0 0) #(struct:pulled-point"
 #" 0 0 -4.0 30.0 0 0) #(struct:pulled-point 0 0 -6.0 30.0 0 0) #(struc"
 #"t:pulled-point 0 0 -6.0 28.0 0 0)) 255 #(struct:color 255 255 255 0)"
 #")) #(struct:polygon (#(struct:pulled-point 0 0 -6.0 28.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -6.0 30.0 0 0) #(struct:pulled-point 0 0 -8.0 30"
 #".0 0 0) #(struct:pulled-point 0 0 -8.0 28.0 0 0)) 255 #(struct:color"
 #" 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 -8.0 2"
 #"8.0 0 0) #(struct:pulled-point 0 0 -8.0 30.0 0 0) #(struct:pulled-po"
 #"int 0 0 -10.0 30.0 0 0) #(struct:pulled-point 0 0 -10.0 28.0 0 0)) 2"
 #"55 #(struct:color 255 255 255 0))) #(struct:polygon (#(struct:pulled"
 #"-point 0 0 -10.0 28.0 0 0) #(struct:pulled-point 0 0 -10.0 30.0 0 0)"
 #" #(struct:pulled-point 0 0 -12.0 30.0 0 0) #(struct:pulled-point 0 0"
 #" -12.0 28.0 0 0)) 255 #(struct:color 255 255 255 0))) #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 -12.0 28.0 0 0) #(struct:pulled-point "
 #"0 0 -12.0 30.0 0 0) #(struct:pulled-point 0 0 -14.0 30.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -14.0 28.0 0 0)) 255 #(struct:color 255 255 255 "
 #"0))) #(struct:polygon (#(struct:pulled-point 0 0 -14.0 28.0 0 0) #(s"
 #"truct:pulled-point 0 0 -14.0 30.0 0 0) #(struct:pulled-point 0 0 -16"
 #".0 30.0 0 0) #(struct:pulled-point 0 0 -16.0 28.0 0 0)) 255 #(struct"
 #":color 255 255 255 0))) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"-16.0 28.0 0 0) #(struct:pulled-point 0 0 -16.0 30.0 0 0) #(struct:p"
 #"ulled-point 0 0 -18.0 30.0 0 0) #(struct:pulled-point 0 0 -18.0 28.0"
 #" 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -18"
 #".0 28.0 0 0) #(struct:pulled-point 0 0 -18.0 30.0 0 0) #(struct:pull"
 #"ed-point 0 0 -20.0 30.0 0 0) #(struct:pulled-point 0 0 -20.0 28.0 0 "
 #"0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 -20.0 "
 #"28.0 0 0) #(struct:pulled-point 0 0 -20.0 30.0 0 0) #(struct:pulled-"
 #"point 0 0 -22.0 30.0 0 0) #(struct:pulled-point 0 0 -22.0 28.0 0 0))"
 #" 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 0 -2"
 #"2.0 28.0 0 0) #(struct:pulled-point 0 0 -22.0 30.0 0 0) #(struct:pul"
 #"led-point 0 0 -24.0 30.0 0 0) #(struct:pulled-point 0 0 -24.0 28.0 0"
 #" 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 -24.0 28.0 0 0) #(struct:pulled-point 0 0 -24.0 30.0 0 0) #(struct"
 #":pulled-point 0 0 -26.0 30.0 0 0) #(struct:pulled-point 0 0 -26.0 28"
 #".0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 -26.0 28.0 0 0) #(struct:pulled-point 0 0 -26.0 30.0 0 0) #(st"
 #"ruct:pulled-point 0 0 -28.0 30.0 0 0) #(struct:pulled-point 0 0 -28."
 #"0 28.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 -28.0 28.0 0 0) #(struct:pulled-point 0 0 -28.0 30.0 0 0) "
 #"#(struct:pulled-point 0 0 -30.0 30.0 0 0) #(struct:pulled-point 0 0 "
 #"-30.0 28.0 0 0)) 255 \"light gray\")) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 -30.0 28.0 0 0) #(struct:pulled-point 0 0 -30.0 30.0 0"
 #" 0) #(struct:pulled-point 0 0 -32.0 30.0 0 0) #(struct:pulled-point "
 #"0 0 -32.0 28.0 0 0)) 255 \"light gray\"))) #(struct:bb 32.0 30.0 30."
 #"0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; draw-ship: State Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-ship"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"rotate"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"player-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"player-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; draw-stats: State Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-stats"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"fuel-text"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Fuel:\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-fuel"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"acceleration-text"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Acceleration: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"hud"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 14 3 17 #"acceleration-text"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 14 3 9 #"fuel-text"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"hud"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Planet Functions/Constants"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; draw-planet-info: p => Notification(struct)"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #"; Takes a planet and creates a notification struct at the upper-left"
 #" of the planet"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"create-planet-info"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"make-notification"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 17 3 29 #"; planet is unique identifier"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"planet-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"planet-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")) "
0 0 17 3 26 #"; place at upper-left of p"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))) "
0 0 17 3 12 #"; place info"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";random-planet: => planet-struct"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"random-planet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-planet"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-color"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"256"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"256"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"256"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; generate-planets: Num => [Listof Planets"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"generate-planets"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"random-planet"
0 0 24 3 3 #") ("
0 0 14 3 16 #"generate-planets"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; draw-planets: Struct Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-planets"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 40 #"; helper: [Listof Planet] Image => Image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 3 #")) "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 12 #"planet-color"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"planet-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"planet-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"helper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"helper"
0 0 24 3 2 #" ("
0 0 14 3 13 #"state-planets"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; Notifications"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"draw-notifications"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 14 3 4 #"last"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 16 #"notification-img"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"notification-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"notification-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 4 #"last"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 5 #"image"
0 0 24 3 2 #" ("
0 0 14 3 19 #"state-notifications"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Initial States"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"init-player"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"init-state"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-state"
0 0 24 3 1 #" "
0 0 14 3 11 #"init-player"
0 0 24 3 2 #" ("
0 0 14 3 16 #"generate-planets"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; GUI"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; draw-world: State => Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"draw-notifications"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-stats"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-planets"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Key-Event Handler Functions"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Player [1 or -1] => Player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"change-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 12 #"acceleration"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Player [+ or -] => Player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"change-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rotation"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 5 #"delta"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 3 #"360"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Key Event Handler"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; key-handler: State Key => State"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 19 #"change-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))] "
0 0 17 3 14 #"; Increase Acc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 2 #"-2"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 19 #"change-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 5 #")))] "
0 0 17 3 14 #"; Decrease Acc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 15 #"change-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 5 #")))] "
0 0 17 3 13 #"; Rotate left"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 15 #"change-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 5 #")))] "
0 0 17 3 14 #"; Rotate right"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"])) "
0 0 17 3 22 #"; Do nothing otherwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; Tick Handler Functions"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; ship-movement: Player => Player"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; Updates player values, to be used in tick-handler"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"ship-movement"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"x-movement"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"y-movement"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 3 #"sin"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"out-of-fuel"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-fuel"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"refuel"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"touching-planets?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 17 3 32 #"; x y rotation acceleration fuel"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 11 #"out-of-fuel"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 10 #"x-movement"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 11 #"out-of-fuel"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 10 #"y-movement"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"player-rotation"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"refuel"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 11 #"out-of-fuel"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-fuel"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-acceleration"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Distance Formula"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; find-distance: Number Number Number Number = > Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"find-distance"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; touching-planets?: Num NumState => [Planet or NULL]"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #"; If there is a planet that is touching the ship, then return the pl"
 #"anet. Otherwise, return null"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"touching-planets?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"find-distance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"player-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"planet-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"planet-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #") ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"helper"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 13 #"state-planets"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; hovering-planets?: Num Num State => Planet"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #"; Takes the mouse position and returns the planet where the mouse po"
 #"sns are, or null"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hovering-planets?"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"find-distance"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #" ("
0 0 14 3 8 #"planet-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"planet-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoP"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #" ("
0 0 14 3 13 #"state-planets"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Tick Handler"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; tick-handler: State => State"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tick-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-state"
0 0 24 3 1 #" "
0 0 17 3 26 #"; Player, [Listof Planets]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"ship-movement"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"state-planets"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 19 #"state-notifications"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; check-duplicate-notifications"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"duplicate-notification?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"notification-id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 3 #")) "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 23 #"duplicate-notification?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"LoN"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; removes planet notifications that are no longer hovered over"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"remove-inactive-planet-info"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"state-notifications"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 38 #"; helper: notification, player => bool"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 95
(
 #"; tells me whether or not the player is still hovering their mouse o"
 #"ver the planet notification"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 5 #"notif"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 15 #"notification-id"
0 0 24 3 1 #" "
0 0 14 3 5 #"notif"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"find-distance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"player-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 8 #"player-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 8 #"planet-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"planet-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"planet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 5 #"))  ("
0 0 14 3 19 #"state-notifications"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; handle-mouse-movement: State Num Num => State"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #"; Handles mouse movement events. Accepts the state and mouse positio"
 #"ns, outputs the state."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"handle-mouse-movement"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hovering-planets?"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 23 #"duplicate-notification?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 19 #"state-notifications"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-state"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 13 #"state-planets"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 17 3 17 #"; player, planets"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 27 #"remove-inactive-planet-info"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")  "
0 0 17 3 67
#"; notifications - we remove inactive notifications and add new ones"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 18 #"create-planet-info"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"s"
0 0 24 3 3 #")) "
0 0 17 3 56 #"; otherwise return state with updated notifications, too"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; Mouse Handler"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; mouse-handler: State Num Num MouseEvent => State"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouse-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #"  ("
0 0 14 3 21 #"handle-mouse-movement"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"move\""
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Start the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 10 #"init-state"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ["
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ["
0 0 14 3 8 #"on-mouse"
0 0 24 3 1 #" "
0 0 14 3 13 #"mouse-handler"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"tick-handler"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #"])"
0           0
